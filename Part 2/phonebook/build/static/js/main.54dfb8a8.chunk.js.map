{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","read","axios","get","then","response","data","create","newObject","post","update","id","put","deleteEntry","delete","Notification","message","notificationStyle","color","toLowerCase","includes","borderColor","className","style","Filter","value","handleChange","onChange","PersonForm","handleSubmit","nameValue","numberValue","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleClick","map","person","name","number","Person","props","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","setMessage","useEffect","event","target","preventDefault","length","indexOf","trim","console","log","window","confirm","existingPerson","find","newPerson","updatedPerson","setTimeout","catch","error","filter","concat","i","charAt","checkMatch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54dfb8a8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// ex. 2.15, 2.16, 3.9, 3.11\r\nconst baseUrl = '/api/persons';\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst read = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}/`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\n// ex. 2.17\r\nconst deleteEntry = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst personService = { read, create, update, deleteEntry };\r\nexport default personService;\r\n","import React from 'react';\r\n\r\n// ex. 2.19\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    const notificationStyle = {\r\n        color: (message.toLowerCase().includes('added') || message.toLowerCase().includes('changed')) ? 'green' : 'red',\r\n        borderColor: (message.toLowerCase().includes('added') || message.toLowerCase().includes('changed')) ? 'green' : 'red'\r\n    };\r\n\r\n    return (\r\n        <div className=\"notification\" style={notificationStyle} >{message}</div>\r\n    )\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport personService from './services/persons';\r\nimport Notification from './components/Notification';\r\nimport './App.css';\r\n\r\n// ex. 2.6\r\nfunction App() {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  // ex. 2.10\r\n  useEffect(() => {\r\n    personService.read()\r\n      .then(response => {\r\n        setPersons(response);\r\n      });\r\n  }, []);\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n\r\n    if (newName.length === 0 || newNumber.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // ex. 2.7\r\n    // Convert names of persons to lowercase, then verify if the persons array contains a person with the inputted name (also lowercased)\r\n    // Alert if the name already associated to one person and don't add it to the phonebook\r\n    if (persons.map(person => person.name.toLowerCase()).indexOf(newName.toLowerCase().trim()) !== -1) {\r\n      console.log(persons);\r\n      // ex. 2.18\r\n      if (persons.map(person => person.number).indexOf(newNumber.trim()) === -1) {\r\n\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n          const existingPerson = persons.find(existingPerson => existingPerson.name === newName);\r\n          const newPerson = { ...existingPerson, number: newNumber };\r\n          personService.update(existingPerson.id, newPerson)\r\n            .then(updatedPerson => {\r\n              setPersons(persons.map(person => person.id !== existingPerson.id ? person : updatedPerson));\r\n              setNewName('');\r\n              setNewNumber('');\r\n              setMessage(`${updatedPerson.name}'s number is changed to: ${updatedPerson.number}`);\r\n              setTimeout(() => setMessage(null), 2500);\r\n            })\r\n            .catch(error => {\r\n              // ex. 2.20\r\n              setMessage(`Information of ${existingPerson.name} has already been removed from server`);\r\n              setTimeout(() => setMessage(null), 2500);\r\n              setPersons(persons.filter(person => person.id !== existingPerson.id));\r\n            });\r\n        }\r\n        return;\r\n\r\n      } else {\r\n        setMessage(`${newName} is already added to phonebook`);\r\n        setTimeout(() => setMessage(null), 2500);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Create new Person object\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    // Concatenate the existing array with then new entry, without modifying an old orray (cf: React state should be modified)\r\n    personService.create(newPerson)\r\n      .then(newPerson => {\r\n        setPersons(persons.concat(newPerson));\r\n        setNewName('');\r\n        setNewNumber('');\r\n        setMessage(`Added ${newPerson.name}`);\r\n        setTimeout(() => setMessage(null), 2500);\r\n      })\r\n      .catch(error => {\r\n        setMessage(`${newPerson.name} ${newPerson.number} can't be added`);\r\n        setTimeout(() => setMessage(null), 2500);\r\n      });\r\n  };\r\n\r\n  const deletePerson = name => {\r\n    if (window.confirm(`Delete ${name} ?`)) {\r\n      const id = persons.find(person => person.name === name).id;\r\n      \r\n      personService.deleteEntry(id)\r\n        .then(response => {\r\n          setPersons(persons.filter(person => person.id !== id));\r\n          setMessage(`${name} has been deleted`);\r\n          setTimeout(() => setMessage(null), 2500);\r\n        })\r\n        .catch(error => {\r\n          setMessage(`Information of ${name} has already been removed from server`);\r\n          setTimeout(() => setMessage(null), 2500);\r\n          setPersons(persons.filter(person => person.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  // Helper method used inside of a filter method, which indicates if there is a match between names and a search value\r\n  const checkMatch = person => {\r\n    // For every letter in search's input field check a match\r\n    for (let i = 0; i < search.length; i++) {\r\n      // As soon as no match is encountered, return false, no point in continuing futher\r\n      if (person.name.toLowerCase().charAt(i) !== search.trim().toLowerCase().charAt(i)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Otherwise return true, since it's a full match\r\n    return true;\r\n  };\r\n\r\n  const handleNameChange = event => setNewName(event.target.value);\r\n  // ex. 2.8\r\n  const handleNumberChange = event => setNewNumber(event.target.value);\r\n  // ex. 2.9\r\n  const handleSearchChange = event => setSearch(event.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter value={search} handleChange={handleSearchChange} />\r\n      <h2>Add a new</h2>\r\n      <PersonForm handleSubmit={addPerson} nameValue={newName} numberValue={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={search.length === 0 ? persons : persons.filter(person => checkMatch(person))} handleClick={deletePerson} />\r\n      {/* {search.length === 0 ? persons.map(person => <div key={person.name}>{person.name} {person.number}</div>)\r\n      : persons.filter(person => checkMatch(person)).map(person => <div key={person.name}>{person.name} {person.number}</div>)} */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ex. 2.10\r\nconst Filter = ({ value, handleChange }) => <>Filter shown with <input value={value} onChange={handleChange} /></>;\r\n\r\nconst PersonForm = ({ handleSubmit, nameValue, numberValue, handleNameChange, handleNumberChange }) => (\r\n  <form onSubmit={handleSubmit} >\r\n    <div>Name : <input value={nameValue} onChange={handleNameChange} /></div>\r\n    <div>Number : <input value={numberValue} onChange={handleNumberChange} /></div>\r\n    <div><button type=\"submit\">Add</button></div>\r\n  </form>\r\n);\r\n\r\nconst Persons = ({ persons, handleClick }) => (<>{persons.map(person => <Person key={person.name} name={person.name} number={person.number} handleClick={handleClick} />)}</>);\r\n\r\nconst Person = props => <div>{props.name} {props.number} <button onClick={() => props.handleClick(props.name)}>Delete</button></div>;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}